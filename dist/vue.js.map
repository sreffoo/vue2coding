{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组的部分方法（变异方法）\r\n\r\n// 获取数组原型\r\nlet oldArrayProto = Array.prototype\r\n\r\n// 使得newArrayProto.__proto__ 指向 oldArrayProto  所以修改了他的方法还可以从原型拿到原来的方法\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [// 找到所有变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]// concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n    // 例如 arr.push(1,2,3)\r\n    newArrayProto[method] = function(...args) {// 这里重写数组的方法\r\n        // 内部调用的原方法 函数劫持 切片编程\r\n\r\n        //TODO:...\r\n        const result = oldArrayProto[method].call(this, ...args)// 这里this要改成arr的this push.call(arr)\r\n        console.log(method);\r\n\r\n        // 如果新增的数据是对象，还需要继续劫持\r\n        let inserted\r\n        // this指向arr 也就是data\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':// arr.unshift(1,2,3)\r\n                inserted = args\r\n                break;\r\n            case 'splice':// arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted) {\r\n            // 对新增内容进行观测\r\n            // 此时的this仍指向arr，Observer类里的data\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\"\r\n\r\nclass Observer{// 用于观测，观测的方法都写在里面\r\n    \r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性（vue里会因此单独写一些api $set $delete）\r\n        \r\n        // 自定义一个属性放this 同时给数据加了标识，有则说明被观测过\r\n        // 如果写data.__ob__ = this 若data是对象会造成死循环\r\n        // 因此不能在循环时遍历这个属性\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false// 不可枚举 循环时不可获取\r\n        })\r\n\r\n        if(Array.isArray(data)) {\r\n            // 在保留数组原方法的情况下重写数组中的方法 7个变异方法    \r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) {// 循环对象 对属性依次劫持\r\n        // ’重新定义‘属性 vue2的性能瓶颈，vue3使用proxy明显提升\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))// 将数据定义为响应式的\r\n    }\r\n    observeArray(data) {// 对数组中的对象劫持 不劫持所有元素\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// ‘属性劫持’ 定义为公共api 后续可能供导出使用，因此没有写到类里面\r\nexport function defineReactive(target, key, value) {// 闭包 当前执行栈不销毁，get set都能拿到value\r\n    \r\n    // value可能又是一个对象，要对所有属性进行递归劫持（深度属性劫持）\r\n    // 性能不怎么好\r\n    observe(value)\r\n\r\n    // 当更改值的时候也会暂存到value中，实现响应式？\r\n    Object.defineProperty(target, key, {\r\n        get() {// 取值的时候 会执行get\r\n            return value\r\n        },\r\n        set(newValue) {// 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            // set的值可能又是一个对象 再次代理\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    \r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer) {\r\n        // 如果这个属性是Observer的实例 说明被代理过了\r\n        // 直接返回他的实例\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持了，就无需再次劫持（可以增添一个实例，用实例判断是否被劫持，如上）\r\n    return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options// 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数或对象\r\n\r\n    // 不使用call的话data并没有作为对象的方法被调用\r\n    data = typeof data === 'function' ? data.call(vm) : data // data是用户返回的对象\r\n    \r\n    //TODO: 为什么要有这一句才能在vm上观测到劫持\r\n    // 将返回的对象放到了_data\r\n    vm._data = data \r\n\r\n    // 对数据进行劫持 defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm代理，方便用户取值\r\n    for (let key in data) {\r\n        proxy(vm,'_data',key)\r\n    }\r\n}","import { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) {// 给Vue增加init方法\r\n    // console.log(this);\r\n    Vue.prototype._init = function(options) {// 用于初始化操作\r\n        // vm.$options 就是获取用户的配置\r\n        // $都是实例上自己的属性$nextTick $data等\r\n        // 假如在data里面初始化一个$name，无法通过vm.$name拿到\r\n        const vm = this\r\n        vm.$options = options// 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n        // ...\r\n        // console.log(this);\r\n    }\r\n}","import { initMixin } from \"./init\"\r\n\r\n// es6的class会导致所有方法都耦合在一起\r\nfunction Vue(options) {// options就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\n// 扩展init方法，引这个包的时候就会马上调用，马上执行函数\r\n// 写第一行一样的\r\ninitMixin(Vue) \r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","console","log","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":"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"}