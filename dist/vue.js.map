{"version":3,"file":"vue.js","sources":["../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["class Observer{\r\n    \r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性（vue里会因此单独写一些api $set $delete）\r\n        this.walk(data)\r\n    }\r\n    \r\n    walk(data) {// 循环对象 对属性依次劫持\r\n        // ’重新定义‘属性 vue2的性能瓶颈，vue3使用proxy明显提升\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))// 将数据定义为响应式的\r\n    }\r\n}\r\n\r\n// ‘属性劫持’ 定义为公共api 后续可能供导出使用，因此没有写到类里面\r\nexport function defineReactive(target, key, value) {// 闭包 当前执行栈不销毁，get set都能拿到value\r\n    \r\n    // value可能又是一个对象，要对所有属性进行递归劫持（深度属性劫持）\r\n    // 性能不怎么好\r\n    observe(value)\r\n\r\n    // 当更改值的时候也会暂存到value中，实现响应式？\r\n    Object.defineProperty(target, key, {\r\n        get() {// 取值的时候 会执行get\r\n            return value\r\n        },\r\n        set(newValue) {// 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    \r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n\r\n    // 如果一个对象被劫持了，就无需再次劫持（可以增添一个实例，用实例判断是否被劫持过）\r\n    return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options// 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数或对象\r\n\r\n    // 不使用call的话data并没有作为对象的方法被调用\r\n    data = typeof data === 'function' ? data.call(vm) : data // data是用户返回的对象\r\n    \r\n    //TODO: 为什么要有这一句才能在vm上观测到劫持\r\n    // 将返回的对象放到了_data\r\n    vm._data = data \r\n\r\n    // 对数据进行劫持 defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm代理，方便用户取值\r\n    for (let key in data) {\r\n        proxy(vm,'_data',key)\r\n    }\r\n}","import { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) {// 给Vue增加init方法\r\n    // console.log(this);\r\n    Vue.prototype._init = function(options) {// 用于初始化操作\r\n        // vm.$options 就是获取用户的配置\r\n        // $都是实例上自己的属性$nextTick $data等\r\n        // 假如在data里面初始化一个$name，无法通过vm.$name拿到\r\n        const vm = this\r\n        vm.$options = options// 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n        // ...\r\n        // console.log(this);\r\n    }\r\n}","import { initMixin } from \"./init\"\r\n\r\n// es6的class会导致所有方法都耦合在一起\r\nfunction Vue(options) {// options就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\n// 扩展init方法，引这个包的时候就会马上调用，马上执行函数\r\n// 写第一行一样的\r\ninitMixin(Vue) \r\n\r\nexport default Vue"],"names":["Observer","data","_classCallCheck","walk","_createClass","key","value","Object","keys","forEach","defineReactive","target","observe","defineProperty","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":"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"}