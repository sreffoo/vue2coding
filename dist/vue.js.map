{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n// 匹配到分组为一个标签名 <xxx匹配到的是开始标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n// 匹配的是</xxx> 最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// 第一个分组就是属性的key value是 分组3/4/5\r\nconst startTagClose = /^\\s*(\\/?)>/ // <div> <br/>\r\n\r\n// Vue3不采用正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) { // html最开始肯定是一个标签\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []\r\n    let currentParent// 指向栈中最后一个\r\n    let root\r\n    // 最终需要转化为一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return  {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    // 类似leetcode括号匹配,用栈确定父子元素关系,进而构造一棵树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\r\n        if(!root){\r\n            root = node\r\n        }\r\n        if(currentParent) {// 如果当前有父元素 设置当前元素父元素 以及父元素的子元素\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g,'') // 如果空格超过2可以去删除2个以上的,不然渲染就没空格了\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end(tag) {\r\n        let node = stack.pop() // 弹出最后一个,可以校验标签是否合法\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if(start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length) // 匹配一段少一段\r\n            \r\n            // 如果不是开始标签的结束就一直匹配下去\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                // disabled这样的可能是个true\r\n                match.attrs.push({name: attr[1], value: attr[3]||attr[4]||attr[5]||true})\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            // console.log(match);\r\n            return match\r\n        }\r\n        // console.log(html);\r\n        return false // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 流程\r\n        // debugger\r\n\r\n        // 如果textEnd为0 说明是一个开始标签或结束标签\r\n        // 如果>0说明就是文本的结束为治 <div>hello</div>\r\n        let textEnd = html.indexOf('<')\r\n        if(textEnd == 0) {\r\n            const startTagMatch = parseStartTag() // 开始标签的匹配结果\r\n            if(startTagMatch){ // 解析到的开始标签\r\n                // console.log(html);\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            let text = html.substring(0, textEnd)// 文本内容\r\n            if(text) {\r\n                chars(text)\r\n                advance(text.length)// 解析到的文本\r\n            }\r\n        }\r\n    }\r\n    // console.log(root);\r\n    return root\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = '' // {name, value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if(attr.name === 'style') {\r\n            // color:red; background:red => {color: 'red'}\r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`// a:b,c:d,\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{asdasdas}} 匹配到内容就是表达式变量\r\nfunction gen(node) {\r\n    if(node.type === 1) {\r\n        return codegen(node)\r\n    }else {\r\n        // 文本\r\n        let text = node.text\r\n        if(!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        }else {\r\n            // _v( _s(name)+'hello'+ _s(age))\r\n            let tokens = []\r\n            let match\r\n            // 因为正则表达式有/g\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                // console.log(match);\r\n                let index = match.index\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children)\r\n    let code = `_c('${ast.tag}',${\r\n        ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n    }${\r\n        ast.children.length ? `,${children}` : ''\r\n    })`\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 1.将template转化为ast语法树\r\n    // console.log(template);\r\n    let ast = parseHTML(template)\r\n    // 2.生成render方法 方法执行后返回的结果就是虚拟DOM\r\n    // console.log(ast);\r\n    // 所有模板引擎的实现原理就是 with + new Function\r\n    let code = codegen(ast)\r\n    // console.log(code);\r\n\r\n    code = `with(this) {\r\n                return ${code}\r\n            }`\r\n    let render = new Function(code) // 根据代码生成render函数\r\n    // console.log(render);\r\n    return render\r\n}","export function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function() {\r\n        console.log('update');\r\n    }\r\n    Vue.prototype._render = function() {\r\n        console.log('render');\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    // 1.调用render方法产生虚拟节点 虚拟DOM\r\n\r\n    vm._update(vm._render()) // vm.$options.render() 返回虚拟节点\r\n\r\n    // 2.根据虚拟节点产生真实DOM\r\n\r\n    // 3.插入到el元素中\r\n}\r\n\r\n// Vue核心流程 1、创造了响应式数据 2、模板转化为ast语法树\r\n// 3、将ast转化为render函数（为虚拟节点做准备，因为每次重新渲染用正则替换消耗很大）\r\n// 4、后续每次数据更新可以只执行render函数，无需再次执行ast转化过程\r\n// render函数会去产生虚拟DOM（使用响应式数据）\r\n// 根据生成的虚拟DOM创造真实DOM","// 重写数组的部分方法（变异方法）\r\n\r\n// 获取数组原型\r\nlet oldArrayProto = Array.prototype\r\n\r\n// 使得newArrayProto.__proto__ 指向 oldArrayProto  所以修改了他的方法还可以从原型拿到原来的方法\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [// 找到所有变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]// concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n    // 例如 arr.push(1,2,3)\r\n    newArrayProto[method] = function(...args) {// 这里重写数组的方法\r\n        // 内部调用的原方法 函数劫持 切片编程\r\n\r\n        //TODO:...\r\n        const result = oldArrayProto[method].call(this, ...args)// 这里this要改成arr的this push.call(arr)\r\n        console.log(method);\r\n\r\n        // 如果新增的数据是对象，还需要继续劫持\r\n        let inserted\r\n        // this指向arr 也就是data\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':// arr.unshift(1,2,3)\r\n                inserted = args\r\n                break;\r\n            case 'splice':// arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted) {\r\n            // 对新增内容进行观测\r\n            // 此时的this仍指向arr，Observer类里的data\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\"\r\n\r\nclass Observer{// 用于观测，观测的方法都写在里面\r\n    \r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性（vue里会因此单独写一些api $set $delete）\r\n        \r\n        // 自定义一个属性放this 同时给数据加了标识，有则说明被观测过\r\n        // 如果写data.__ob__ = this 若data是对象会造成死循环\r\n        // 因此不能在循环时遍历这个属性\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false// 不可枚举 循环时不可获取\r\n        })\r\n\r\n        if(Array.isArray(data)) {\r\n            // 在保留数组原方法的情况下重写数组中的方法 7个变异方法    \r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) {// 循环对象 对属性依次劫持\r\n        // ’重新定义‘属性 vue2的性能瓶颈，vue3使用proxy明显提升\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))// 将数据定义为响应式的\r\n    }\r\n    observeArray(data) {// 对数组中的对象劫持 不劫持所有元素\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// ‘属性劫持’ 定义为公共api 后续可能供导出使用，因此没有写到类里面\r\nexport function defineReactive(target, key, value) {// 闭包 当前执行栈不销毁，get set都能拿到value\r\n    \r\n    // value可能又是一个对象，要对所有属性进行递归劫持（深度属性劫持）\r\n    // 性能不怎么好\r\n    observe(value)\r\n\r\n    // 当更改值的时候也会暂存到value中，实现响应式？\r\n    Object.defineProperty(target, key, {\r\n        get() {// 取值的时候 会执行get\r\n            return value\r\n        },\r\n        set(newValue) {// 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            // set的值可能又是一个对象 再次代理\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    \r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer) {\r\n        // 如果这个属性是Observer的实例 说明被代理过了\r\n        // 直接返回他的实例\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持了，就无需再次劫持（可以增添一个实例，用实例判断是否被劫持，如上）\r\n    return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options// 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数或对象\r\n\r\n    // 不使用call的话data并没有作为对象的方法被调用\r\n    data = typeof data === 'function' ? data.call(vm) : data // data是用户返回的对象\r\n    \r\n    //TODO: 为什么要有这一句才能在vm上观测到劫持\r\n    // 将返回的对象放到了_data\r\n    vm._data = data \r\n\r\n    // 对数据进行劫持 defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm代理，方便用户取值\r\n    for (let key in data) {\r\n        proxy(vm,'_data',key)\r\n    }\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { mountComponent } from \"./lifecycle\"\r\nimport { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) {// 给Vue增加init方法\r\n    // console.log(this);\r\n    Vue.prototype._init = function(options) {// 用于初始化操作\r\n        // vm.$options 就是获取用户的配置\r\n        // $都是实例上自己的属性$nextTick $data等\r\n        // 假如在data里面初始化一个$name，无法通过vm.$name拿到\r\n        const vm = this\r\n        vm.$options = options// 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n        \r\n        if(options.el) {\r\n            vm.$mount(options.el) // 数据挂载\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if(!ops.render) { // 先进行查找有没有render函数\r\n            let template // 没有render看是否写template，没写就用外部的template\r\n            if(!ops.template && el) { // 没写模板，但写了el\r\n                template = el.outerHTML\r\n            }else {\r\n                if(el) {\r\n                    // 如果有el 采用模板内容\r\n                    template = ops.template\r\n                }\r\n            }\r\n            if(template) {\r\n                // 这里需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        // console.log(ops.render) // 最终就可以获取render方法\r\n        mountComponent(vm, el)\r\n\r\n\r\n        // script标签引用的vue.global.js的话，这个编译过程在浏览器运行\r\n        // runtime不包含模板编译（options中的那个），因此用runtime的时候不能用template\r\n        // 整个编译是打包时通过loader转移.vue文件的\r\n    }\r\n}","import { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\n\r\n// es6的class会导致所有方法都耦合在一起\r\nfunction Vue(options) {// options就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\n// 扩展init方法，引这个包的时候就会马上调用，马上执行函数\r\n// 写第一行一样的\r\ninitMixin(Vue) \r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","initLifeCycle","Vue","prototype","_update","console","log","_render","mountComponent","vm","el","oldArrayProto","Array","newArrayProto","Object","create","methods","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","observe","target","get","set","newValue","_typeof","initState","opts","$options","initData","proxy","_data","initMixin","_init","options","$mount","document","querySelector","ops","outerHTML"],"mappings":"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"}