{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n// 匹配到分组为一个标签名 <xxx匹配到的是开始标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n// 匹配的是</xxx> 最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// 第一个分组就是属性的key value是 分组3/4/5\r\nconst startTagClose = /^\\s*(\\/?)>/ // <div> <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{asdasdas}} 匹配到内容就是表达式变量\r\n\r\n// Vue3不采用正则\r\n// 对模板进行编译处理\r\nfunction parseHTML(html) { // html最开始肯定是一个标签\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []\r\n    let currentParent// 指向栈中最后一个\r\n    let root\r\n    // 最终需要转化为一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return  {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    // 类似leetcode括号匹配,用栈确定父子元素关系,进而构造一棵树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\r\n        if(!root){\r\n            root = node\r\n        }\r\n        if(currentParent) {// 如果当前有父元素 设置当前元素父元素 以及父元素的子元素\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g,'') // 如果空格超过2可以去删除2个以上的,不然渲染就没空格了\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end(tag) {\r\n        let node = stack.pop() // 弹出最后一个,可以校验标签是否合法\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if(start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length) // 匹配一段少一段\r\n            \r\n            // 如果不是开始标签的结束就一直匹配下去\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                // disabled这样的可能是个true\r\n                match.attrs.push({name: attr[1], value: attr[3]||attr[4]||attr[5]||true})\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            // console.log(match);\r\n            return match\r\n        }\r\n        // console.log(html);\r\n        return false // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 流程\r\n        // debugger\r\n\r\n        // 如果textEnd为0 说明是一个开始标签或结束标签\r\n        // 如果>0说明就是文本的结束为治 <div>hello</div>\r\n        let textEnd = html.indexOf('<')\r\n        if(textEnd == 0) {\r\n            const startTagMatch = parseStartTag() // 开始标签的匹配结果\r\n            if(startTagMatch){ // 解析到的开始标签\r\n                // console.log(html);\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            let text = html.substring(0, textEnd)// 文本内容\r\n            if(text) {\r\n                chars(text)\r\n                advance(text.length)// 解析到的文本\r\n            }\r\n        }\r\n    }\r\n    console.log(root);\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 1.将template转化为ast语法树\r\n    console.log(template);\r\n    let ast = parseHTML(template)\r\n    // 2.生成render方法 方法执行后返回的结果就是虚拟DOM\r\n    // console.log(template);\r\n}","// 重写数组的部分方法（变异方法）\r\n\r\n// 获取数组原型\r\nlet oldArrayProto = Array.prototype\r\n\r\n// 使得newArrayProto.__proto__ 指向 oldArrayProto  所以修改了他的方法还可以从原型拿到原来的方法\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [// 找到所有变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]// concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n    // 例如 arr.push(1,2,3)\r\n    newArrayProto[method] = function(...args) {// 这里重写数组的方法\r\n        // 内部调用的原方法 函数劫持 切片编程\r\n\r\n        //TODO:...\r\n        const result = oldArrayProto[method].call(this, ...args)// 这里this要改成arr的this push.call(arr)\r\n        console.log(method);\r\n\r\n        // 如果新增的数据是对象，还需要继续劫持\r\n        let inserted\r\n        // this指向arr 也就是data\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':// arr.unshift(1,2,3)\r\n                inserted = args\r\n                break;\r\n            case 'splice':// arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted) {\r\n            // 对新增内容进行观测\r\n            // 此时的this仍指向arr，Observer类里的data\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\"\r\n\r\nclass Observer{// 用于观测，观测的方法都写在里面\r\n    \r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性（vue里会因此单独写一些api $set $delete）\r\n        \r\n        // 自定义一个属性放this 同时给数据加了标识，有则说明被观测过\r\n        // 如果写data.__ob__ = this 若data是对象会造成死循环\r\n        // 因此不能在循环时遍历这个属性\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false// 不可枚举 循环时不可获取\r\n        })\r\n\r\n        if(Array.isArray(data)) {\r\n            // 在保留数组原方法的情况下重写数组中的方法 7个变异方法    \r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) {// 循环对象 对属性依次劫持\r\n        // ’重新定义‘属性 vue2的性能瓶颈，vue3使用proxy明显提升\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))// 将数据定义为响应式的\r\n    }\r\n    observeArray(data) {// 对数组中的对象劫持 不劫持所有元素\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// ‘属性劫持’ 定义为公共api 后续可能供导出使用，因此没有写到类里面\r\nexport function defineReactive(target, key, value) {// 闭包 当前执行栈不销毁，get set都能拿到value\r\n    \r\n    // value可能又是一个对象，要对所有属性进行递归劫持（深度属性劫持）\r\n    // 性能不怎么好\r\n    observe(value)\r\n\r\n    // 当更改值的时候也会暂存到value中，实现响应式？\r\n    Object.defineProperty(target, key, {\r\n        get() {// 取值的时候 会执行get\r\n            return value\r\n        },\r\n        set(newValue) {// 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            // set的值可能又是一个对象 再次代理\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    \r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer) {\r\n        // 如果这个属性是Observer的实例 说明被代理过了\r\n        // 直接返回他的实例\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持了，就无需再次劫持（可以增添一个实例，用实例判断是否被劫持，如上）\r\n    return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options// 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数或对象\r\n\r\n    // 不使用call的话data并没有作为对象的方法被调用\r\n    data = typeof data === 'function' ? data.call(vm) : data // data是用户返回的对象\r\n    \r\n    //TODO: 为什么要有这一句才能在vm上观测到劫持\r\n    // 将返回的对象放到了_data\r\n    vm._data = data \r\n\r\n    // 对数据进行劫持 defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm代理，方便用户取值\r\n    for (let key in data) {\r\n        proxy(vm,'_data',key)\r\n    }\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) {// 给Vue增加init方法\r\n    // console.log(this);\r\n    Vue.prototype._init = function(options) {// 用于初始化操作\r\n        // vm.$options 就是获取用户的配置\r\n        // $都是实例上自己的属性$nextTick $data等\r\n        // 假如在data里面初始化一个$name，无法通过vm.$name拿到\r\n        const vm = this\r\n        vm.$options = options// 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n        \r\n        if(options.el) {\r\n            vm.$mount(options.el) // 数据挂载\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if(!ops.render) { // 先进行查找有没有render函数\r\n            let template // 没有render看是否写template，没写就用外部的template\r\n            if(!ops.template && el) { // 没写模板，但写了el\r\n                template = el.outerHTML\r\n            }else {\r\n                if(el) {\r\n                    // 如果有el 采用模板内容\r\n                    template = ops.template\r\n                }\r\n            }\r\n            if(template) {\r\n                // 这里需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        ops.render // 最终就可以获取render方法\r\n\r\n        // script标签引用的vue.global.js的话，这个编译过程在浏览器运行\r\n        // runtime不包含模板编译（options中的那个），因此用runtime的时候不能用template\r\n        // 整个编译是打包时通过loader转移.vue文件的\r\n    }\r\n}","import { initMixin } from \"./init\"\r\n\r\n// es6的class会导致所有方法都耦合在一起\r\nfunction Vue(options) {// options就是用户的选项\r\n    this._init(options)\r\n}\r\n\r\n// 扩展init方法，引这个包的时候就会马上调用，马上执行函数\r\n// 写第一行一样的\r\ninitMixin(Vue) \r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","console","log","compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}